"""
题目描述：
某农场主管理了一大片果园，fields[i] 表示不同果林的面积，单位:(m^2)，
现在要为所有的果林施肥且必须在 n 天之内完成，否则影响收成。
小布是果林的工作人员，他每次选择一片果林进行施肥，且一片果林施肥完后当天不再进行施肥作业。
假设施肥机的能效为k，单位:(m^2/day)，请问至少租赁能效 k 为多少的施肥机才能确保不影响收成？
如果无法完成施肥任务，则返回 -1。

输入描述：
第一行输入为 m 和 n，m 表示 fields 中的元素个数，n 表示施肥任务必须在 n 天内（含 n 天）完成；
第二行输入为 fields，fields[i] 表示果林i的面积，单位:(m^2)

输出描述：
对于每组数据，输出最小施肥机的能效 k，无多余空格。

补充说明：
1 <= fields.n <= 10^4
1 <= n <= 10^9
1 <= fields[i] <= 10^9

示例1

输入：
    5 7
    5 7 9 15 10
输出：
    9
说明：
当能效k为9时，fields[0] 需要1天，fields[1] 需要1天，fields[2] 需要1天，fields[3] 需要2天，fields[4] 需要2天，共需要7天，不会影响收成。

示例2

输入：
    3 1
    2 3 4
输出：
    -1
说明：
由于一天最多完成一片果林的施肥，无论 k 为多少都至少需要3天才能完成施肥，因此返回-1。
"""
import math

m = 5  # m 表示 fields 中的元素个数
day = 7  # n 表示施肥任务必须在 n 天内（含 n 天）完成；
fields = [5, 7, 9, 15, 10]

# 问题：请问至少租赁能效 k 为多少的施肥机才能确保不影响收成？
'''B-二分查找 + 中心极限法'''
if day < m:
    # 如果施肥天数小于需要施肥的地，不可能完成（一块地最少要一天）
    ans = -1
elif day == m:
    # 如果施肥天数正好等于需要施肥的地数量，也就是每块地都1天弄完
    ans = max(fields)
else:
    # 如果施肥天数比地块多，k最少是1，最多是最大那块地面积
    end = max(fields)
    start = 1
    # 按照限定条件，求出k最小取值
    while start < end - 1:
        mid = (start + end) // 2  # 从中间开始试,向下取整
        days = 0  # 统计总共需要的天数
        for elem in fields:
            days += math.ceil(elem / mid)  # 向上取整  也就是1.1天就是需要花2天
        if days > day:
            # 如果总共花费的天数比要求的大，需要将k增大，也就是mid增大
            start = mid
        else:
            # 如果总共花费的天数比要求的大，需要将k增大
            end = mid
    # 直到最小k比最大k少1，说明找到了k的最小极限值，
    ans = start + 1
print(ans)