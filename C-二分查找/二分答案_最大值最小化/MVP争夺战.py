"""
【100分】
题目描述： 在星球争霸篮球赛对抗赛中，强大的宇宙战队，希望每个人都能拿到MVP。
MVP的条件是，单场最高分得分获得者，可以并列，所以宇宙战队决定在比赛中，尽可能让更多的队员上场，且让所有有得分的队员得分都相同。
然而比赛过程中的每一分钟的得分都只能由某一个人包揽。
输入描述： 输入第一行为一个数字t，表示有得分的分钟数（ 1 <= t <= 50），第二行为t个数字，代表每一分钟的得分p（1 <= p <= 50）
输出描述： 输出有得分的队员都是MVP时最少的MVP得分。
补充说明：
示例

示例1
输入： 9
5 2 1 5 2 1 5 2 1
输出： 6
说明： 样例解释：一共4人得分，分别都为6分
5 + 1
5 + 1
5 + 1
2 + 2 + 2

知识点：dfs
"""


def fun():
    n = 9
    scores = [5, 2, 1, 5, 2, 1, 5, 2, 1]
    # n = 5
    # scores = [6, 4, 3, 3, 2]
    ans = 0
    # 分析：9个数，要找出任意数字组合相加，其总和相等的最小数
    # 也就是把数组等分为和相等的若干份，求等分数量最大
    # 1。如果9个数相等，等分数量=n,算最大
    # 2。如果9个数不想等，按照等分数量最大可能往下减，等到满足等分的这个人数是最大的
    total = sum(scores)  # 4*6=24

    # i 越多，avg越少
    scores.sort(reverse=True)  # 从高往下排 [5,5,5,2,2,2,1,1,1]  [6, 4, 3, 3, 2]

    for i in range(n, 0, -1):
        avg = total / i  # i = 9,  avg: 24/9 = 2.   24/5=4.  24/4=6
        left = 0
        right = n - 1
        sub = scores[left]
        while sub <= avg:  # j: 5
            if sub == avg:
                if left == right:
                    ans = sub
                    return ans
                left += 1
                sub = scores[left]
            else:
                sub += scores[right]
                right -= 1


print(fun())
