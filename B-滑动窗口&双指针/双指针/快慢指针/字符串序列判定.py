"""
题目解析和算法源码
https://fcqian.blog.csdn.net/article/details/127228559

OJ用例
题解 - 字符串序列判定 - Hydro

题目描述
输入两个字符串S和L，都只包含英文小写字母。S长度<=100，L长度<=500,000。

判定S是否是L的有效子串。

判定规则：

S中的每个字符在L中都能找到（可以不连续），且S在Ｌ中字符的前后顺序与S中顺序要保持一致。

（例如，S=”ace”是L=”abcde”的一个子序列且有效字符是a、c、e，而”aec”不是有效子序列，且有效字符只有a、e）

输入描述
输入两个字符串S和L，都只包含英文小写字母。S长度<=100，L长度<=500,000。

先输入S，再输入L，每个字符串占一行。

输出描述
S串最后一个有效字符在L中的位置。（首位从0开始计算，无有效字符返回-1）

用例1
输入
ace
abcde
输出
4

用例2
输入
fgh
abcde
输出
-1
"""

'''
本题实际考试时，对于下面用例：
aec
abcde
满分解法返回：4
因此，本题并不需要S是L的有效子串，只需要找到S串中最后一个有效字符在L中的位置即可。
比如S="ace"，L="abcde"，则S的有效字符为'a'，'e'，其中'e'是S的最后一个有效字符，该字符在L中的位置是4，因此结果返回4
'''

# todo 简单的快慢指针
# 输入：两个字符串S和L
s = input()
l = input()


# 输出：S串最后一个有效字符在L中的位置, 无有效字符返回-1
# S中的每个字符在L中都能找到（可以不连续），且S在Ｌ中字符的前后顺序与S中顺序要保持一致。
# 本题并不需要S是L的有效子串，只需要找到S串中最后一个有效字符在L中的位置即可
ans = -1
# si指向s下一个需要判断的字符
si = 0

for li, c in enumerate(l):
    # 如果s[si]和c相同: si右移动，并记录可能答案ans=li
    if s[si] == c:
        ans = li
        si += 1
        
print(ans)
