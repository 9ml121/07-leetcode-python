"""
https://fcqian.blog.csdn.net/article/details/127418150

题目描述
程序员小明打了一辆出租车去上班。出于职业敏感，他注意到这辆出租车的计费表有点问题，总是偏大。

出租车司机解释说他不喜欢数字4，所以改装了计费表，任何数字位置遇到数字4就直接跳过，其余功能都正常。

比如：

23再多一块钱就变为25；
39再多一块钱变为50；
399再多一块钱变为500； 小明识破了司机的伎俩，准备利用自己的学识打败司机的阴谋。
给出计费表的表面读数，返回实际产生的费用。

输入描述
只有一行，数字N，表示里程表的读数。

(1<=N<=888888888)。

输出描述
一个数字，表示实际产生的费用。以回车结束。

用例1
输入
5
输出
4
说明
5表示计费表的表面读数。

4表示实际产生的费用其实只有4块钱。

用例2
输入
17
输出
15
说明
17表示计费表的表面读数。

15表示实际产生的费用其实只有15块钱。

用例3
输入
100
输出
81
说明
100表示计费表的表面读数。

81表示实际产生的费用其实只有81块钱。
"""


# todo 9进制转10进制整数
# 类似：05-字符串&整数&哈希\位运算\里程表故障.py
"""
9进制
1=>1
2=>2
3=>3=> 3*9^0
+1
4=>5=> (5-1)*9^0
5=>6
6=>7
7=>8
8=>9
9=>10

10=>11=> 1*9^1 + 1*9^0
11=>12
12=>13
+2
13=>15=> 1*9^1 + (5-1)*9^0
14=>16
15=>17
16=>18
17=>19
18=>20

19=>21
20=>22=> 2*9^1 + 2*9^0
+3
22=>25=>2*9^1 + (5-1)*9^0
29=>32=> 3*9^1 + 2*9^0
+4
31=>35=> 3*9^1 + (5-1)*9^0

+15
40=>55=> (5-1)*9^1 + (5-1)*9^0
x =>100=> 1*9^2 + 0*9^1 + 0*9^0 = 81
"""

# 输入：s表示计费表表面的读数
s = input()

# 输出：计费表实际产生的费用
ans = 0
# s实际代表一个9进制字符串，从低位开始算起，转换为10进制整数
for i, x in enumerate(s[::-1]):
    # i代表9进制的位置下标，x代表该位置数字，需要计算x的正确数字
    num = int(x)
    if num >= 5:
        num -= 1
        
    ans += num * (9**i)

print(ans)
